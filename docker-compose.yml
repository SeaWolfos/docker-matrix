version: '3.5'

services:

  traefik:
    image: traefik:v2.2
    restart: always
    networks:
      - matrix
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.matrixfederation.address=:8448"
      - "--certificatesresolvers.le.acme.email=admin@calicomining.company"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
      - "--accesslog"
    ports:
      - 80:80
      - 443:443
      - 8448:8448
    expose:
      - 8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./storage/traefik/config/acme.json:/letsencrypt/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.tlsredirect.redirectscheme.scheme=https"
      - "traefik.http.routers.catchall.middlewares=tlsredirect"
      - "traefik.http.routers.catchall.entrypoints=web"
      - "traefik.http.routers.catchall.rule=hostregexp(`{host:.+}`)"

  nginx:
    image: nginx:latest
    restart: always
    networks:
      - matrix
    volumes:
      - ./storage/nginx/site:/usr/share/nginx/html
      - ./storage/nginx/matrix.conf:/etc/nginx/conf.d/matrix.conf
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=matrix"
      - "traefik.http.routers.nginx.rule=(Host(`calicomining.company`) && PathPrefix(`/.well-known`)) || Host(`www.calicomining.company`)"
      - "traefik.http.routers.nginx.priority=1" #long rule, so we knock its priority down to allow synapse rule to take over
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=le"
      ## redirect base hostname to your site. change to app.calicomining.company if you want to redirect to Element instead.
      - "traefik.http.middlewares.to-site.redirectregex.regex=^https://calicomining.company/$$"
      - "traefik.http.middlewares.to-site.redirectregex.replacement=https://app.calicomining.company/"
      - "traefik.http.routers.site.middlewares=to-site"
      - "traefik.http.routers.site.rule=Host(`calicomining.company`)"
      - "traefik.http.routers.site.tls.certresolver=le"

  synapse:
    image: matrixdotorg/synapse:v1.20.1
    restart: always
    depends_on:
      - postgresql
    networks:
      - matrix
      - postgres
    volumes:
      - ./storage/synapse/data:/data
    environment:
      - UID=1000
      - GID=1000
    expose:
      - 8008
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=matrix"
      - "traefik.http.routers.synapse.entrypoints=websecure,matrixfederation"
      - "traefik.http.routers.synapse.tls.certresolver=le"
      - "traefik.http.routers.synapse.rule=Host(`synapse.calicomining.company`)"
      - "traefik.http.routers.synapse.priority=100"

  element:
    image: vectorim/riot-web:v1.7.7
    restart: always
    networks:
      - matrix
    volumes:
      - ./storage/element/data/config.json:/app/config.json
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=matrix"
      - "traefik.http.routers.element.entrypoints=websecure"
      - "traefik.http.routers.element.tls.certresolver=le"
      - "traefik.http.routers.element.rule=Host(`app.calicomining.company`)"

  postgresql:
    image: postgres:12.3
    restart: always
    networks:
      postgres:
        aliases: 
          - database
    environment:
      - POSTGRES_PASSWORD=gDpG5VdHc7fQbkingHQl
    volumes:
      - ./storage/postgresql/data:/var/lib/postgresql/data
      - ./storage/postgresql/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    expose:
      - 5432

## to-do: synapse-admin?, coturn? jitsi?

networks:
  postgres:
  matrix:
    # explicitly name it so it works in traefik.docker.network labels
    name: matrix
